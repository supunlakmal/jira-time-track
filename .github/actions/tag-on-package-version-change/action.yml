name: 'Tag on Package Version Change'
description: 'Creates a git tag when package.json version changes'
inputs:
  branch-suffix-map:
    description: 'JSON mapping of branch names to tag suffixes'
    required: false
    default: '{}'

runs:
  using: 'composite'
  steps:
    - name: Get package version
      id: package-version
      shell: bash
      run: |
        VERSION=$(node -p "require('./package.json').version")
        echo "version=$VERSION" >> $GITHUB_OUTPUT
        echo "Package version: $VERSION"

    - name: Check if version changed
      id: version-changed
      shell: bash
      run: |
        # Get the version from the previous commit
        git fetch origin --depth=2
        PREV_VERSION=$(git show HEAD~1:package.json | node -p "JSON.parse(require('fs').readFileSync('/dev/stdin', 'utf8')).version" 2>/dev/null || echo "0.0.0")
        CURRENT_VERSION="${{ steps.package-version.outputs.version }}"
        
        echo "Previous version: $PREV_VERSION"
        echo "Current version: $CURRENT_VERSION"
        
        if [ "$PREV_VERSION" != "$CURRENT_VERSION" ]; then
          echo "changed=true" >> $GITHUB_OUTPUT
          echo "Version changed from $PREV_VERSION to $CURRENT_VERSION"
        else
          echo "changed=false" >> $GITHUB_OUTPUT
          echo "Version unchanged"
        fi

    - name: Determine tag suffix
      id: tag-suffix
      shell: bash
      run: |
        BRANCH_NAME="${{ github.ref_name }}"
        SUFFIX_MAP='${{ inputs.branch-suffix-map }}'
        
        if [ -n "$SUFFIX_MAP" ] && [ "$SUFFIX_MAP" != "{}" ]; then
          SUFFIX=$(echo "$SUFFIX_MAP" | node -p "JSON.parse(require('fs').readFileSync('/dev/stdin', 'utf8'))['$BRANCH_NAME'] || ''")
        else
          SUFFIX=""
        fi
        
        echo "suffix=$SUFFIX" >> $GITHUB_OUTPUT
        echo "Branch: $BRANCH_NAME, Suffix: $SUFFIX"

    - name: Create and push tag
      if: steps.version-changed.outputs.changed == 'true'
      shell: bash
      run: |
        VERSION="${{ steps.package-version.outputs.version }}"
        SUFFIX="${{ steps.tag-suffix.outputs.suffix }}"
        TAG="v${VERSION}${SUFFIX}"
        
        echo "Creating tag: $TAG"
        
        # Configure git
        git config user.name "github-actions[bot]"
        git config user.email "github-actions[bot]@users.noreply.github.com"
        
        # Create and push tag
        git tag -a "$TAG" -m "Release $TAG"
        git push origin "$TAG"
        
        echo "Tag $TAG created and pushed successfully"

    - name: Output tag information
      shell: bash
      run: |
        if [ "${{ steps.version-changed.outputs.changed }}" == "true" ]; then
          VERSION="${{ steps.package-version.outputs.version }}"
          SUFFIX="${{ steps.tag-suffix.outputs.suffix }}"
          TAG="v${VERSION}${SUFFIX}"
          echo "::notice::Created tag $TAG for version $VERSION"
        else
          echo "::notice::No version change detected, skipping tag creation"
        fi